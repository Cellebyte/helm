# Default values for metallb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName

# To configure MetalLB, you must specify ONE of the following two
# options.

# existingConfigMap specifies the name of an externally-defined
# ConfigMap to use as the configuration. Helm will not manage the
# contents of this ConfigMap, it is your responsibility to create it.
# existingConfigMap: metallb-config

# configInline specifies MetalLB's configuration directly, in yaml
# format. When configInline is used, Helm manages MetalLB's
# configuration ConfigMap as part of the release, and
# existingConfigMap is ignored.
#
# Refer to https://metallb.universe.tf/configuration/ for
# available options.
configInline: {}


## String to partially override grafana.fullname include (will maintain the release name)
##
# nameOverride:

## String to fully override grafana.fullname template
##
# fullnameOverride:

rbac:
  # create specifies whether to install and use RBAC rules.
  create: true

prometheus:
  # Prometheus Operator service monitors
  serviceMonitor:
    # enable support for Prometheus Operator
    enabled: true
    # Job label for scrape target
    jobLabel: metallb
    # Scrape interval. If not set, the Prometheus default scrape interval is used.
    interval: 15s
    metricRelabelings: []
    relabelings: []

  # Prometheus Operator alertmanager alerts
  prometheusRule:
    enabled: true

# To configure MetalLB, you must specify ONE of the following two
# options.

# existingConfigMap specifies the name of an externally-defined
# ConfigMap to use as the configuration. Helm will not manage the
# contents of this ConfigMap, it is your responsibility to create it.
# existingConfigMap: metallb-config

# configInline specifies MetalLB's configuration directly, in yaml
# format. When configInline is used, Helm manages MetalLB's
# configuration ConfigMap as part of the release, and
# existingConfigMap is ignored.
#
# Refer to https://metallb.universe.tf/configuration/ for
# available options.
configInline: {}

# controller contains configuration specific to the MetalLB cluster
# controller.
controller:
  image:
    registry: docker.io
    repository: metallb/controller
    tag: v0.8.1
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistryKeySecretName
  resources: {}
    # limits:
      # cpu: 100m
      # memory: 100Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  serviceAccount:
    # Specifies whether a ServiceAccount should be created
    create: true
    # The name of the ServiceAccount to use.  If not set and create is
    # true, a name is generated using the fullname template
    name: ""

# speaker contains configuration specific to the MetalLB speaker
# daemonset.
speaker:
  image:
    registry: docker.io
    repository: metallb/speaker
    tag: v0.8.1
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 100m
      memory: 100Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  serviceAccount:
    # Specifies whether a ServiceAccount should be created
    create: true
    # The name of the ServiceAccount to use.  If not set and create is
    # true, a name is generated using the fullname template
    name: ""
