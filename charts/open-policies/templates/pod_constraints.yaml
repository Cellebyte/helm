---
# Don't allow the reference of a latest tag.
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sBannedImageTags
metadata:
  name: ban-latest-tag
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
  parameters:
    tags:
      - "latest"
{{- if .Values.allowedRegistries }}
---
# Only allow our registries.
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sAllowedRepos
metadata:
 name: cluster-repo-is-harbor
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
  parameters:
    repos:
    {{- range .Values.allowedRegistries }}
      - {{ . }}
    {{- end }}
{{- end }}
---
# Customer: Deny any root container.
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPAllowedUsers
metadata:
  name: psp-pods-allowed-user-ranges
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
    excludedNamespaces:
    {{- range .Values.excludedNamespaces }}
      - {{ . }}
    {{- end }}
  parameters:
    runAsUser:
      rule: MustRunAsNonRoot
---
# Customer: Deny any root container.
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPAllowedSupplementalGroups
metadata:
  name: psp-pods-allowed-supplemental-groups-ranges
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
    excludedNamespaces:
    {{- range .Values.excludedNamespaces }}
      - {{ . }}
    {{- end }}
  parameters:
    supplementalGroups:
      rule: MustRunAsNonRoot
---
# Deny privilegeEscalation: true
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPAllowPrivilegeEscalationContainer
metadata:
  name: psp-allow-privilege-escalation-container
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
---
# Customer: Deny privileged: true
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPPrivilegedContainer
metadata:
  name: psp-privileged-container
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
    excludedNamespaces:
    {{- range .Values.excludedNamespaces }}
      - {{ . }}
    {{- end }}
---
# Deny the Host Namespace PID/IPC for all containers:
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPHostNamespace
metadata:
  name: psp-host-namespace
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
---
# ControlPlane: allowed hostNetwork ports
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPHostNetworkingPorts
metadata:
  name: psp-host-network-ports-control-plane
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
    namespaces:
    {{- range .Values.excludedNamespaces }}
      - {{ . }}
    {{- end }}
  parameters:
    hostNetwork: true
    min: 80
    max: 8443
---
# Customer: Deny all hostNetwork Traffic.
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPHostNetworkingPorts
metadata:
  name: psp-host-network-ports
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
    excludedNamespaces:
    {{- range .Values.excludedNamespaces }}
      - {{ . }}
    {{- end }}
  parameters:
    hostNetwork: false
---
# Customer: Allowed volumes by a container.
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPVolumeTypes
metadata:
  name: psp-volume-types
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
    excludedNamespaces:
    {{- range .Values.excludedNamespaces }}
      - {{ . }}
    {{- end }}
  parameters:
    volumes:
    # - "*" # * may be used to allow all volume types
    - configMap
    - emptyDir
    - projected
    - secret
    - downwardAPI
    - persistentVolumeClaim
    - flexVolume #required for allowedFlexVolumes
---
# ControlPlane: Allowed volumes
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPVolumeTypes
metadata:
  name: psp-volume-types-control-plane
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
    namespaces:
    {{- range .Values.excludedNamespaces }}
      - {{ . }}
    {{- end }}
  parameters:
    volumes:
    # - "*" # * may be used to allow all volume types
    - configMap
    - emptyDir
    - projected
    - secret
    - downwardAPI
    - persistentVolumeClaim
    - hostPath #required for allowedHostPaths
    - flexVolume #required for allowedFlexVolumes
