apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {{- include "gatekeeper.labels" . | nindent 4 }}
  name: {{ include "gatekeeper.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "gatekeeper.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "gatekeeper.labels" . | nindent 8 }}
      {{- if .Values.podAnnotations }}
      annotations: {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
{{- include "gatekeeper.imagePullSecrets" . | indent 6 }}
      containers:
      - name: manager
        args:
        - --audit-interval=30
        - --port=8443
        - --logtostderr
        - --exempt-namespace=gatekeeper-system
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: {{ include "gatekeeper.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
        ports:
        - containerPort: 8443
          name: webhook-server
          protocol: TCP
        - containerPort: 8888
          name: metrics
          protocol: TCP
        - containerPort: 9090
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 9090
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
        {{- if .Values.securityContext }}
          runAsGroup: {{ .Values.securityContext.runAsGroup }}
          runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
        {{- end }}
        volumeMounts:
        - mountPath: /certs
          name: cert
          readOnly: true
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "metallb.tplValue" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "gatekeeper.tplValue" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations}}
      tolerations: {{- include "gatekeeper.tplValue" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gatekeeper.serviceAccountName" . }}
      terminationGracePeriodSeconds: 60
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ include "gatekeeper.fullname" . }}
