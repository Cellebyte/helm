{{ $root := .}}
{{- if .Values.operator.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: {{ include "thanos-prometheus-operator.name" $root }}-prometheus
    role: default
  name: alertmanager.alerts
spec:
  groups:
  - name: alertmanager.alerts
    rules:
    - alert: AlertmanagerConfigInconsistent
      annotations:
        message: {{` The configuration of the instances of the Alertmanager cluster {{ $labels.service }} `}}
          are out of sync.
      expr: 'count_values("config_hash", alertmanager_config_hash{job="{{ include "thanos-prometheus-operator.name" $root }}-alertmanager",namespace="{{ .Release.Namespace }}"}) BY (service) / ON(service) GROUP_LEFT() label_replace(max(prometheus_operator_spec_replicas{job="prometheus-operator",namespace="{{ .Release.Namespace }}",controller="alertmanager"}) by (name, job, namespace, controller), "service", "alertmanager-$1", "name", "(.*)") != 1'
      for: 5m
      labels:
        severity: critical
    - alert: AlertmanagerFailedReload
      annotations:
        message: {{` Reloading Alertmanager's configuration has failed for {{ $labels.namespace }}/{{ $labels.pod }}. `}}
      expr: 'alertmanager_config_last_reload_successful{job="{{ include "thanos-prometheus-operator.name" $root }}-alertmanager",namespace="{{ .Release.Namespace }}"} == 0'
      for: 10m
      labels:
        severity: warning
    - alert: AlertmanagerMembersInconsistent
      annotations:
        message: Alertmanager has not found all other members of the cluster.
      expr: 'alertmanager_cluster_members{job="{{ include "thanos-prometheus-operator.name" $root }}-alertmanager",namespace="{{ .Release.Namespace }}"} != on (service) GROUP_LEFT() count by (service) (alertmanager_cluster_members{job="{{ include "thanos-prometheus-operator.name" $root }}-alertmanager",namespace="{{ .Release.Namespace }}"})'
      for: 5m
      labels:
        severity: critical
{{- end }}
