- name: k8s.rules
  rules:
  - expr: 'sum(rate(container_cpu_usage_seconds_total{job="kubelet", image!="", container!="POD"}[5m]))
      by (namespace)

      '
    record: namespace:container_cpu_usage_seconds_total:sum_rate
  - expr: "sum by (cluster, namespace, pod, container) (\n  rate(container_cpu_usage_seconds_total{job=\"\
      kubelet\", image!=\"\", container!=\"POD\"}[5m])\n) * on (cluster, namespace,\
      \ pod) group_left(node) max by(cluster, namespace, pod, node) (kube_pod_info)\n"
    record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
  - expr: 'container_memory_working_set_bytes{job="kubelet", image!=""}

      * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)

      '
    record: node_namespace_pod_container:container_memory_working_set_bytes
  - expr: 'container_memory_rss{job="kubelet", image!=""}

      * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)

      '
    record: node_namespace_pod_container:container_memory_rss
  - expr: 'container_memory_cache{job="kubelet", image!=""}

      * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)

      '
    record: node_namespace_pod_container:container_memory_cache
  - expr: 'container_memory_swap{job="kubelet", image!=""}

      * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)

      '
    record: node_namespace_pod_container:container_memory_swap
  - expr: 'sum(container_memory_usage_bytes{job="kubelet", image!="", container!="POD"})
      by (namespace)

      '
    record: namespace:container_memory_usage_bytes:sum
  - expr: "sum by (namespace) (\n    sum by (namespace, pod) (\n        max by (namespace,\
      \ pod, container) (\n            kube_pod_container_resource_requests_memory_bytes{job=\"\
      kube-state-metrics\"}\n        ) * on(namespace, pod) group_left() max by (namespace,\
      \ pod) (\n            kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n\
      \        )\n    )\n)\n"
    record: namespace:kube_pod_container_resource_requests_memory_bytes:sum
  - expr: "sum by (namespace) (\n    sum by (namespace, pod) (\n        max by (namespace,\
      \ pod, container) (\n            kube_pod_container_resource_requests_cpu_cores{job=\"\
      kube-state-metrics\"}\n        ) * on(namespace, pod) group_left() max by (namespace,\
      \ pod) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n\
      \        )\n    )\n)\n"
    record: namespace:kube_pod_container_resource_requests_cpu_cores:sum
  - expr: "sum(\n  label_replace(\n    label_replace(\n      kube_pod_owner{job=\"\
      kube-state-metrics\", owner_kind=\"ReplicaSet\"},\n      \"replicaset\", \"\
      $1\", \"owner_name\", \"(.*)\"\n    ) * on(replicaset, namespace, pod) group_left(owner_name)\
      \ kube_replicaset_owner{job=\"kube-state-metrics\"},\n    \"workload\", \"$1\"\
      , \"owner_name\", \"(.*)\"\n  )\n) by (cluster, namespace, workload, pod)\n"
    labels:
      workload_type: deployment
    record: mixin_pod_workload
  - expr: "sum(\n  label_replace(\n    kube_pod_owner{job=\"kube-state-metrics\",\
      \ owner_kind=\"DaemonSet\"},\n    \"workload\", \"$1\", \"owner_name\", \"(.*)\"\
      \n  )\n) by (cluster, namespace, workload, pod)\n"
    labels:
      workload_type: daemonset
    record: mixin_pod_workload
  - expr: "sum(\n  label_replace(\n    kube_pod_owner{job=\"kube-state-metrics\",\
      \ owner_kind=\"StatefulSet\"},\n    \"workload\", \"$1\", \"owner_name\", \"\
      (.*)\"\n  )\n) by (cluster, namespace, workload, pod)\n"
    labels:
      workload_type: statefulset
    record: mixin_pod_workload
