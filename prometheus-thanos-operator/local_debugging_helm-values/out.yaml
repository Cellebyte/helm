---
# Source: prometheus-operator/charts/kube-state-metrics/templates/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: prometheus-operator-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.1.13
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "1.9.5"
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: false
  volumes:
    - 'secret'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
  readOnlyRootFilesystem: false
---
# Source: prometheus-operator/charts/node-exporter/templates/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: prometheus-operator-node-exporter
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-0.2.4
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "0.18.1"
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
    - 'hostPath'
  hostNetwork: true
  hostIPC: false
  hostPID: true
  hostPorts:
    - min: 0
      max: 65535
  runAsUser:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
  readOnlyRootFilesystem: false
---
# Source: prometheus-operator/templates/alertmanager/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: prometheus-operator-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
---
# Source: prometheus-operator/templates/prometheus-operator/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: prometheus-operator-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
---
# Source: prometheus-operator/templates/prometheus/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: prometheus-operator-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1001
        max: 1001
---
# Source: prometheus-operator/templates/alertmanager/pdb.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: prometheus-operator-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
spec:
  selector:
    matchLabels:
      app: alertmanager
      alertmanager: prometheus-operator-alertmanager
  minAvailable: 1
---
# Source: prometheus-operator/templates/prometheus/pdb.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: prometheus-operator-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
      prometheus: prometheus-operator-prometheus
  minAvailable: 1
---
# Source: prometheus-operator/charts/kube-state-metrics/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-operator-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.1.13
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "1.9.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: prometheus-operator/charts/node-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-operator-node-exporter
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-0.2.4
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "0.18.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: prometheus-operator/templates/alertmanager/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-operator-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
---
# Source: prometheus-operator/templates/prometheus-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-operator-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
---
# Source: prometheus-operator/templates/prometheus/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-operator-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
---
# Source: prometheus-operator/templates/alertmanager/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-prometheus-operator-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
data:
  alertmanager.yaml: "Z2xvYmFsOgogIHJlc29sdmVfdGltZW91dDogNW0KcmVjZWl2ZXJzOgotIG5hbWU6ICJudWxsIgpyb3V0ZToKICBncm91cF9ieToKICAtIGpvYgogIGdyb3VwX2ludGVydmFsOiA1bQogIGdyb3VwX3dhaXQ6IDMwcwogIHJlY2VpdmVyOiAibnVsbCIKICByZXBlYXRfaW50ZXJ2YWw6IDEyaAogIHJvdXRlczoKICAtIG1hdGNoOgogICAgICBhbGVydG5hbWU6IFdhdGNoZG9nCiAgICByZWNlaXZlcjogIm51bGwi"
---
# Source: prometheus-operator/charts/kube-state-metrics/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-operator-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.1.13
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "1.9.5"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["certificates.k8s.io"]
    resources:
      - certificatesigningrequests
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["list", "watch"]
  - apiGroups: ["batch"]
    resources:
      - cronjobs
    verbs: ["list", "watch"]
  - apiGroups: ["extensions", "apps"]
    resources:
      - daemonsets
    verbs: ["list", "watch"]
  - apiGroups: ["extensions", "apps"]
    resources:
      - deployments
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - endpoints
    verbs: ["list", "watch"]
  - apiGroups: ["autoscaling"]
    resources:
      - horizontalpodautoscalers
    verbs: ["list", "watch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources:
      - ingresses
    verbs: ["list", "watch"]
  - apiGroups: ["batch"]
    resources:
      - jobs
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - limitranges
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - namespaces
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - nodes
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - persistentvolumeclaims
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - persistentvolumes
    verbs: ["list", "watch"]
  - apiGroups: ["policy"]
    resources:
      - poddisruptionbudgets
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - pods
    verbs: ["list", "watch"]
  - apiGroups: ["extensions", "apps"]
    resources:
      - replicasets
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - replicationcontrollers
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - resourcequotas
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - secrets
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources:
      - services
    verbs: ["list", "watch"]
  - apiGroups: ["apps"]
    resources:
      - statefulsets
    verbs: ["list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources:
      - storageclasses
    verbs: ["list", "watch"]
---
# Source: prometheus-operator/charts/kube-state-metrics/templates/psp-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: prometheus-operator-kube-state-metrics-psp
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.1.13
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "1.9.5"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ['extensions']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames:
      - prometheus-operator-kube-state-metrics
---
# Source: prometheus-operator/charts/node-exporter/templates/psp-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: prometheus-operator-node-exporter-psp
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-0.2.4
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "0.18.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ['extensions']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames:
      - prometheus-operator-node-exporter
---
# Source: prometheus-operator/templates/alertmanager/psp-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: prometheus-operator-alertmanager-psp
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
rules:
  - apiGroups: ['extensions']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames:
      - prometheus-operator-alertmanager
---
# Source: prometheus-operator/templates/prometheus-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-operator-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - '*'
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - alertmanagers
      - prometheuses
      - prometheuses/finalizers
      - alertmanagers/finalizers
      - servicemonitors
      - podmonitors
      - prometheusrules
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - delete
  - apiGroups:
      - ""
    resources:
      - services
      - services/finalizers
      - endpoints
    verbs:
      - get
      - create
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
---
# Source: prometheus-operator/templates/prometheus-operator/psp-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: prometheus-operator-operator-psp
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
rules:
  - apiGroups: ['extensions']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames:
      - prometheus-operator-operator
---
# Source: prometheus-operator/templates/prometheus/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-operator-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
rules:
  - apiGroups:
      - ""
    resources:
      - nodes/metrics
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs:
      - "get"
      - "list"
      - "watch"
  - apiGroups:
      - extensions
      - "networking.k8s.io"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - "get"
---
# Source: prometheus-operator/templates/prometheus/psp-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: prometheus-operator-prometheus-psp
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
rules:
  - apiGroups: ['extensions']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames:
      - prometheus-operator-prometheus
---
# Source: prometheus-operator/charts/kube-state-metrics/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-operator-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.1.13
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "1.9.5"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-operator-kube-state-metrics
subjects:
  - kind: ServiceAccount
    name: prometheus-operator-kube-state-metrics
    namespace: monitoring-system
---
# Source: prometheus-operator/charts/kube-state-metrics/templates/psp-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-operator-kube-state-metrics-psp
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.1.13
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "1.9.5"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-operator-kube-state-metrics-psp
subjects:
  - kind: ServiceAccount
    name: prometheus-operator-kube-state-metrics
    namespace: monitoring-system
---
# Source: prometheus-operator/charts/node-exporter/templates/psp-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-operator-node-exporter-psp
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-0.2.4
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "0.18.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-operator-node-exporter-psp
subjects:
  - kind: ServiceAccount
    name: prometheus-operator-node-exporter
    namespace: monitoring-system
---
# Source: prometheus-operator/templates/alertmanager/psp-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-operator-alertmanager-psp
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-operator-alertmanager-psp
subjects:
  - kind: ServiceAccount
    name: prometheus-operator-alertmanager
    namespace: monitoring-system
---
# Source: prometheus-operator/templates/prometheus-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-operator-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-operator-operator
subjects:
  - kind: ServiceAccount
    name: prometheus-operator-operator
    namespace: monitoring-system
---
# Source: prometheus-operator/templates/prometheus-operator/psp-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-operator-operator-psp
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-operator-operator-psp
subjects:
  - kind: ServiceAccount
    name: prometheus-operator-operator
    namespace: monitoring-system
---
# Source: prometheus-operator/templates/prometheus/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-operator-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-operator-prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus-operator-prometheus
    namespace: monitoring-system
---
# Source: prometheus-operator/templates/prometheus/psp-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-operator-prometheus-psp
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-operator-prometheus-psp
subjects:
  - kind: ServiceAccount
    name: prometheus-operator-prometheus
    namespace: monitoring-system
---
# Source: prometheus-operator/charts/kube-state-metrics/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: prometheus-operator-kube-state-metrics
  annotations:
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.1.13
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "1.9.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
      nodePort: null
  selector:
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: prometheus-operator
---
# Source: prometheus-operator/charts/node-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: prometheus-operator-node-exporter
  annotations:
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-0.2.4
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "0.18.1"
    app.kubernetes.io/managed-by: Helm
    jobLabel: node-exporter
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 9100
      targetPort: metrics
      nodePort: null
  selector:
    app.kubernetes.io/name: node-exporter
    app.kubernetes.io/instance: prometheus-operator
---
# Source: prometheus-operator/templates/alertmanager/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: prometheus-operator-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9093
      targetPort: 9093
  selector:
    app: alertmanager
    alertmanager: prometheus-operator-alertmanager
---
# Source: prometheus-operator/templates/prometheus-operator/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: prometheus-operator-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
  selector:
    app.kubernetes.io/name: prometheus-operator
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/component: operator
---
# Source: prometheus-operator/templates/prometheus/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: prometheus-operator-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9090
      targetPort: 9090
      protocol: TCP
  selector:
    app: prometheus
    prometheus: prometheus-operator-prometheus
---
# Source: prometheus-operator/templates/prometheus/thanos-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: prometheus-operator-prometheus-thanos
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/subcomponent: thanos
spec:
  type: ClusterIP
  ports:
    - name: grpc
      port: 10901
      targetPort: grpc
      protocol: TCP
  selector:
    app: prometheus
    prometheus: prometheus-operator-prometheus
---
# Source: prometheus-operator/charts/node-exporter/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: prometheus-operator-node-exporter
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-0.2.4
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "0.18.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/instance: prometheus-operator
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-exporter
        helm.sh/chart: node-exporter-0.2.4
        app.kubernetes.io/instance: prometheus-operator
        app.kubernetes.io/version: "0.18.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: prometheus-operator-node-exporter      
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
        runAsNonRoot: 
      containers:
        - name: node-exporter
          image: quay.io/prometheus/node-exporter:v0.18.1
          imagePullPolicy: IfNotPresent
          args:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --web.listen-address=0.0.0.0:9100
            - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
            - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
          ports:
            - name: metrics
              containerPort: 9100
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: metrics
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: metrics
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly: true
            - name: sys
              mountPath: /host/sys
              readOnly: true
      hostNetwork: true
      hostPID: true
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
---
# Source: prometheus-operator/charts/kube-state-metrics/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-operator-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.1.13
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "1.9.5"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: prometheus-operator
  replicas: 2
  strategy:
    {}
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        helm.sh/chart: kube-state-metrics-0.1.13
        app.kubernetes.io/instance: prometheus-operator
        app.kubernetes.io/version: "1.9.5"
        app.kubernetes.io/managed-by: Helm
    spec:      
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      hostNetwork: true
      serviceAccountName: prometheus-operator-kube-state-metrics
      containers:
        - name: kube-state-metrics
          image: quay.io/coreos/kube-state-metrics:v1.9.5
          imagePullPolicy: IfNotPresent
          args:
            - --collectors=certificatesigningrequests
            - --collectors=configmaps
            - --collectors=cronjobs
            - --collectors=daemonsets
            - --collectors=deployments
            - --collectors=endpoints
            - --collectors=horizontalpodautoscalers
            - --collectors=ingresses
            - --collectors=jobs
            - --collectors=limitranges
            - --collectors=namespaces
            - --collectors=nodes
            - --collectors=persistentvolumeclaims
            - --collectors=persistentvolumes
            - --collectors=poddisruptionbudgets
            - --collectors=pods
            - --collectors=replicasets
            - --collectors=replicationcontrollers
            - --collectors=resourcequotas
            - --collectors=secrets
            - --collectors=services
            - --collectors=statefulsets
            - --collectors=storageclasses
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
---
# Source: prometheus-operator/templates/prometheus-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-operator-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/instance: prometheus-operator
      app.kubernetes.io/component: operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus-operator
        helm.sh/chart: prometheus-operator-0.12.7
        app.kubernetes.io/instance: prometheus-operator
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: operator
      annotations:
    spec:
      serviceAccountName: prometheus-operator-operator
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
        runAsNonRoot: 
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: prometheus-operator
                    app.kubernetes.io/instance: prometheus-operator
                    app.kubernetes.io/component: operator
      containers:
        - name: prometheus-operator
          image: quay.io/coreos/prometheus-operator:v0.36.0
          imagePullPolicy: IfNotPresent
          args:
            - --kubelet-service=kube-system/prometheus-operator-kubelet
            - --log-format=logfmt
            - --log-level=info
            - --logtostderr=true
            - --localhost=127.0.0.1
            - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
            - --prometheus-config-reloader=quay.io/coreos/prometheus-config-reloader:v0.36.0
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
---
# Source: prometheus-operator/templates/alertmanager/alertmanager.yaml
apiVersion: monitoring.coreos.com/v1
kind: Alertmanager
metadata:
  name: prometheus-operator-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
spec:
  replicas: 3
  serviceAccountName: prometheus-operator-alertmanager
  baseImage: quay.io/prometheus/alertmanager
  version: v0.20.0
  listenLocal: false
  externalUrl: http://prometheus-operator-alertmanager.monitoring-system:9093
  paused: false
  logFormat: logfmt
  logLevel: info
  retention: 120h
  resources:
    {}
  routePrefix: "/"
  securityContext:
    runAsUser: 1001
    fsGroup: 1001
  storage:
    emptyDir:
      medium: ""
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: prometheus-operator
                app.kubernetes.io/instance: prometheus-operator
                app.kubernetes.io/component: alertmanager
---
# Source: prometheus-operator/templates/prometheus/prometheus.yaml
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus-operator-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
spec:
  replicas: 2
  serviceAccountName: prometheus-operator-prometheus
  serviceMonitorSelector: {}
  alerting:
    alertmanagers:
      - namespace: monitoring-system
        name: prometheus-operator-alertmanager
        port: http
        pathPrefix: "/"
  baseImage: quay.io/prometheus/prometheus
  version: v2.16.0
  externalLabels:
    cluster: <cluster>
    customer: <customer>
  externalUrl: http://prometheus-operator-prometheus.monitoring-system:9090
  paused: false
  logLevel: info
  logFormat: logfmt
  listenLocal: true
  enableAdminAPI: false
  resources:
    requests:
      memory: 400Mi
  retention: 20d
  routePrefix: "/"
  serviceMonitorNamespaceSelector: {}
  securityContext:
    runAsUser: 1001
    fsGroup: 1001
  ruleNamespaceSelector: {}
  ruleSelector:
    matchLabels:
      prometheus: k8s
      role: alert-rules
  storage:
    emptyDir:
      medium: ""
  nodeSelector:
    kubernetes.io/os: linux
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: prometheus-operator
                app.kubernetes.io/instance: prometheus-operator
                app.kubernetes.io/component: prometheus
  additionalScrapeConfigs:
    name: prometheus-operator-prometheus-scrape-config
    key: additional-scrape-configs.yaml  
  containers:
    - name: thanos-sidecar
      image: quay.io/thanos/thanos:v0.10.1
      imagePullPolicy: IfNotPresent
      args:
        - sidecar
        - --prometheus.url=http://localhost:9090
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
      ports:
        - name: grpc
          containerPort: 10901
          protocol: TCP
        - name: http
          containerPort: 10902
          protocol: TCP
---
# Source: prometheus-operator/charts/kube-state-metrics/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-operator-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.1.13
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "1.9.5"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: prometheus-operator
  endpoints:
    - port: http
  namespaceSelector:
    matchNames:
    - monitoring-system
---
# Source: prometheus-operator/charts/node-exporter/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-operator-node-exporter
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-0.2.4
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/version: "0.18.1"
    app.kubernetes.io/managed-by: Helm
spec:
  jobLabel: jobLabel
  selector:
    matchLabels:
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/instance: prometheus-operator
  endpoints:
    - port: metrics
  namespaceSelector:
    matchNames:
    - monitoring-system
---
# Source: prometheus-operator/templates/alertmanager/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-operator-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/instance: prometheus-operator
      app.kubernetes.io/component: alertmanager
  namespaceSelector:
    matchNames:
      - monitoring-system
  endpoints:
    - port: http
      interval: 15s
      path: "/metrics"
---
# Source: prometheus-operator/templates/exporters/kube-apiserver/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-operator-apiserver
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: apiserver
spec:
  jobLabel: component
  selector:
    matchLabels:
      component: apiserver
      provider: kubernetes
  namespaceSelector:
    matchNames:
      - default
  endpoints:
    - port: https
      scheme: https
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        serverName: kubernetes
        insecureSkipVerify: true
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      interval: 15s
---
# Source: prometheus-operator/templates/exporters/kubelet/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-operator-kubelet
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kubelet
spec:
  jobLabel: k8s-app
  selector:
    matchLabels:
      k8s-app: kubelet
  namespaceSelector:
    matchNames:
      - kube-system
  endpoints:
    - port: https-metrics
      scheme: https
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        serverName: kubernetes
        insecureSkipVerify: true
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      honorLabels: true
      interval: 15s
    - port: https-metrics
      path: /metrics/cadvisor
      scheme: https
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        serverName: kubernetes
        insecureSkipVerify: true
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      honorLabels: true
      interval: 15s
---
# Source: prometheus-operator/templates/prometheus-operator/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-operator-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
spec:
  endpoints:
    - port: http
      honorLabels: true
      interval: 15s
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/instance: prometheus-operator
      app.kubernetes.io/component: operator
  namespaceSelector:
    matchNames:
      - monitoring-system
---
# Source: prometheus-operator/templates/prometheus/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-operator-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.12.7
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/instance: prometheus-operator
      app.kubernetes.io/component: prometheus
  namespaceSelector:
    matchNames:
      - monitoring-system
  endpoints:
    - port: http
      interval: 15s
      path: "/metrics"
