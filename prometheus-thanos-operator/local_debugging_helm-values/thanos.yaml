# apiVersion: helm.fluxcd.io/v1
# kind: HelmRelease
# metadata:
#   name: thanos
#   namespace: monitoring-system
# spec:
#   chart:
#     repository: https://charts.bitnami.com/bitnami
#     name: thanos
#     version: 0.1.5
#   values:
image:
  registry: quay.io
  repository: thanos/thanos
  tag: v0.10.1
  pullPolicy: IfNotPresent
clusterDomain: cluster.local
querier:
  enabled: true
  logLevel: info
  replicaLabel: prometheus_replica
  dnsDiscovery:
    enabled: true
    ## Sidecars service name to discover them using DNS discovery
    ##
    sidecarsService: prometheus-operator-prometheus-thanos
    ## Sidecars namespace to discover them using DNS discovery
    ##
    sidecarsNamespace: monitoring-system

  ## Querier Service Discovery Configuration
  ## Specify content for servicediscovery.yml
  ##
  # sdConfig:

  ## ConfigMap with Querier Service Discovery Configuration
  ## NOTE: This will override querier.sdConfig
  ##
  # existingSDConfigmap:

  ## Extra Flags to passed to Thanos Querier
  ##
  extraFlags: {}

  ## Number of Thanos Querier replicas to deploy
  ##
  replicaCount: 2

  ## StrategyType, can be set to RollingUpdate or Recreate by default.
  ##
  strategyType: RollingUpdate

  ## Affinity for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}

  ## Node labels for pod assignment. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Tolerations for pod assignment. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: {}

  ## Pod priority
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  # priorityClassName: ""

  ## K8s Security Context for Thanos Querier pods
  ## https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ##
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  
  ## Thanos Querier containers' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits: {}
    #   cpu: 100m
    #   memory: 128Mi
    requests: {}
    #   cpu: 100m
    #   memory: 128Mi
  
  ## Thanos Querier pods' liveness and readiness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  livenessProbe:
    httpGet:
      path: /-/healthy
      port: http
    initialDelaySeconds: 30
    timeoutSeconds: 30
    # periodSeconds: 10
    # successThreshold: 1
    # failureThreshold: 6
  readinessProbe:
    httpGet:
      path: /-/ready
      port: http
    initialDelaySeconds: 30
    timeoutSeconds: 30
    # periodSeconds: 10
    # successThreshold: 1
    # failureThreshold: 6

  ## Service paramaters
  ##
  service:
    type: ClusterIP
    http:
      port: 9090
    grpc:
      port: 10901

  ## Autoscaling parameters
  ##
  autoscaling:
    enabled: false
    #  minReplicas: 1
    #  maxReplicas: 11
    #  targetCPU: 50
    #  targetMemory: 50

  ## Querier Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  pdb:
    create: true
    minAvailable: 1

bucketweb:
  enabled: false

compactor:
  enabled: false

storegateway:
  enabled: false

ruler:
  enabled: false

metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: monitoring-system
    interval: 15s

